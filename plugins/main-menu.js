import { promises as fs } from 'fs'
import { join } from 'path'
import fetch from 'node-fetch'
import { xpRange } from '../lib/levelling.js'

const categorias = {
  'anime': 'üå∏ ANIME',
  'main': 'üìå INFO',
  'search': 'üîç B√öSQUEDA',
  'game': 'üéÆ JUEGOS',
  'serbot': 'ü§ñ SUB BOTS',
  'rpg': '‚öîÔ∏è RPG',
  'sticker': 'üé≠ STICKERS',
  'group': 'üë• GRUPOS',
  'premium': 'üíé PREMIUM',
  'downloader': 'üì• DESCARGAS',
  'tools': 'üõ†Ô∏è HERRAMIENTAS',
  'fun': 'üéâ DIVERSI√ìN',
  'nsfw': 'üîû NSFW',
  'cmd': 'üìÇ BASE DE DATOS',
  'owner': 'üëë ADMIN',
  'audio': 'üéµ AUDIOS',
  'advanced': 'üöÄ AVANZADO',
};

const emojisCategorias = {
  'anime': 'üé¥',
  'main': 'üìå',
  'search': 'üîé',
  'game': 'üïπÔ∏è',
  'serbot': 'ü§ñ',
  'rpg': '‚öîÔ∏è',
  'sticker': 'üé≠',
  'group': 'üë•',
  'premium': 'üíé',
  'downloader': 'üì•',
  'tools': 'üõ†Ô∏è',
  'fun': 'üéâ',
  'nsfw': 'üîû',
  'cmd': 'üìÇ',
  'owner': 'üëë',
  'audio': 'üé∂',
  'advanced': 'üöÄ',
};

const generarSaludo = () => {
  const hora = new Date().getHours();
  if (hora >= 5 && hora < 12) return 'üåû ¬°Buenos d√≠as!';
  if (hora >= 12 && hora < 18) return 'üå§ ¬°Buenas tardes!';
  return 'üåô ¬°Buenas noches!';
};

const formatoMenu = {
  antes: `‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n   *Bienvenido a KIRITO-BOT*\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚úé ${generarSaludo()}, *%name*.

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡≥ã‡≥ã‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚òæ
‚ïë‚îè‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ‚ùÉ‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ
‚ïë‚îÉ ü§ñ *Modo:* %modo
‚ïë‚îÉ üìä *Nivel:* %nivel
‚ïë‚îÉ üèÜ *Experiencia:* %exp / %maxexp
‚ïë‚îÉ üë• *Usuarios registrados:* %totalreg
‚ïë‚îó‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ‚ùÉ‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡≥ã‡≥ã‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚òæ
%readmore
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`,
  cabecera: '‚îè‚îÅ‚òæ‚û• *%categoria* ¬´¬´‚ú∞',
  cuerpo: '‚îÉ%emoji %cmd %isLimit %isPremium',
  pie: '‚îó‚îÅ‚îÅ¬´‚ú∞¬ª‚îÅ‚îÅ‚îÅ‚îÅ¬´‚ú∞¬ª‚îÅ‚îÅ‚îÅ‚îÅ¬´‚ú∞¬ª‚îÅ‚îÅ‚îõ',
  despues: 'üî• *By DEYLIN* üî•',
};

const more = String.fromCharCode(8206);
const readMore = more.repeat(4001);

const handler = async (m, { conn, usedPrefix }) => {
  try {
    const usuario = global.db.data.users[m.sender];
    if (!usuario) {
      return conn.reply(m.chat, '‚ùå No est√°s registrado en la base de datos.', m);
    }

    const { exp = 0, level = 1 } = usuario;
    const { min, xp, max } = xpRange(level, global.multiplier || 1);
    const nombre = (await conn.getName(m.sender)) || 'Usuario';
    const totalUsuarios = Object.keys(global.db.data.users || {}).length;
    const modo = global.opts['self'] ? 'Privado' : 'P√∫blico';

    if (!global.plugins) {
      return conn.reply(m.chat, '‚ùå Error: No se encontraron comandos.', m);
    }

    const comandos = Object.values(global.plugins)
      .filter(plugin => plugin && !plugin.disabled)
      .map(plugin => ({
        ayuda: Array.isArray(plugin.help) ? plugin.help : [plugin.help],
        categorias: Array.isArray(plugin.tags) ? plugin.tags : [plugin.tags],
        limite: plugin.limit ? 'üõë' : '',
        premium: plugin.premium ? 'üíé' : '',
      }));

    let menuTexto = formatoMenu.antes
      .replace(/%name/g, nombre)
      .replace(/%modo/g, modo)
      .replace(/%nivel/g, level)
      .replace(/%exp/g, exp - min)
      .replace(/%maxexp/g, xp)
      .replace(/%totalreg/g, totalUsuarios)
      .replace(/%readmore/g, readMore);

    for (let categoria in categorias) {
      const comandosFiltrados = comandos.filter(cmd => cmd.categorias.includes(categoria));
      if (comandosFiltrados.length > 0) {
        menuTexto += `\n\n${formatoMenu.cabecera.replace(/%categoria/g, categorias[categoria])}\n`;
        comandosFiltrados.forEach(cmd => {
          cmd.ayuda.forEach(help => {
            menuTexto += `\n${formatoMenu.cuerpo
              .replace(/%cmd/g, usedPrefix + help)
              .replace(/%isLimit/g, cmd.limite)
              .replace(/%isPremium/g, cmd.premium)
              .replace(/%emoji/g, emojisCategorias[categoria] || 'üîπ')}`;
          });
        });
        menuTexto += `\n${formatoMenu.pie}`;
      }
    }

    menuTexto += `\n\n${formatoMenu.despues}`;

    const imagenURL = 'https://files.catbox.moe/80uwhc.jpg', 'https://files.catbox.moe/hyrmn9.jpg', 'https://files.catbox.moe/0tv7r3.jpg', 'https://files.catbox.moe/yiaw4a.jpg';
    await conn.sendFile(m.chat, imagenURL, 'menu.jpg', menuTexto.trim(), m);
  } catch (error) {
    console.error('Error en el men√∫:', error);
    conn.reply(m.chat, '‚ùå Error al generar el men√∫.', m);
  }
};

handler.help = ['menu', 'allmenu'];
handler.tags = ['main'];
handler.command = ['menu', 'allmenu', 'men√∫'];
handler.register = true;

export default handler;